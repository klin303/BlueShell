SIndex (e1, e2) ->
      let (curr_symbol_table', new_function_decls, builder, e1') = expr curr_symbol_table function_decls builder func_llvalue e1 in
      let (curr_symbol_table'', new_function_decls', builder, e2') = expr curr_symbol_table' new_function_decls builder func_llvalue e2 in
      let new_head_ptr = L.build_malloc list_t "new_head_ptr" builder in
      let _ = L.build_store e1' new_head_ptr builder in
      let index_val = L.build_load e2' "index_val" builder in
      let counter = L.const_int i32_t 0 in
      let pred_bb = L.append_block context "index" func_llvalue in
      let _ = L.build_br pred_bb builder in
      let pred_builder = L.builder_at_end context pred_bb in
      let bool_val = L.build_icmp L.Icmp.Ne index_val counter "index pred" pred_builder in
      let index_body_bb = L.append_block context "index_body" func_llvalue in
      let index_body_builder = L.builder_at_end context index_body_bb in
      let new_counter = L.build_add counter (L.const_int i32_t 1) "increment counter" index_body_builder in
      let next_ptr_ptr = L.build_struct_gep new_head_ptr 1 "next_struct_ptr" index_body_builder in
      let ptr' = L.build_load next_ptr_ptr "e1' in while loop" index_body_builder in
      let _ = L.build_store ptr' new_head_ptr index_body_builder in
      let _ = L.build_br pred_bb index_body_builder in
      let merge_bb = L.append_block context "merge" func_llvalue in
      let _ = L.build_cond_br bool_val index_body_bb merge_bb pred_builder in
      let merge_body_builder = L.builder_at_end context merge_bb in
      let elem_ptr_ptr = L.build_struct_gep new_head_ptr 0 "elem_ptr_ptr" merge_body_builder in
      (* raise (Failure "here") *)
